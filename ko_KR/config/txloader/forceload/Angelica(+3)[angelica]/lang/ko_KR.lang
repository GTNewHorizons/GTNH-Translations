options.button.shader=셰이더...

options.chunks=%s 청크
options.entityShadows=엔티티 그림자
options.droppedItems=%s 아이템
options.droppedItems.max=무제한
sodium.option_impact.low=낮음
sodium.option_impact.medium=중간
sodium.option_impact.high=높음
sodium.option_impact.extreme=극한
sodium.option_impact.varies=다양함
sodium.options.pages.quality=퀄리티
sodium.options.pages.performance=성능
sodium.options.pages.advanced=고급
sodium.options.view_distance.tooltip=렌더링 거리는 지형이 렌더링되는 거리를 제어합니다. 거리가 짧을수록 렌더링되는 지형이 적어지고 프레임 속도가 향상됩니다.
sodium.options.simulation_distance.tooltip=시뮬레이션 거리는 지형과 개체가 로드되고 틱되는 거리를 제어합니다. 거리가 짧을수록 내부 서버의 로드가 줄어들고 프레임 속도가 향상될 수 있습니다.
sodium.options.brightness.tooltip=게임의 밝기(감마)를 제어합니다.
sodium.options.clouds.name=구름
sodium.options.clouds.tooltip=구름의 표시 여부를 제어합니다.
sodium.options.gui_scale.tooltip=사용자 인터페이스에 사용할 최대 배율을 설정합니다. '자동'을 사용하면 항상 가장 큰 배율이 사용됩니다.
sodium.options.fullscreen.tooltip=활성화하면 게임이 전체 화면으로 표시됩니다(지원되는 경우).
sodium.options.v_sync.tooltip=활성화하면 게임의 프레임 속도가 모니터의 새로 고침 빈도와 동기화되어 전체 입력 대기 시간을 희생하면서 일반적으로 더 부드러운 경험을 제공합니다. 시스템이 너무 느린 경우 이 설정으로 인해 성능이 저하될 수 있습니다.입
sodium.options.fps_limit.tooltip=초당 최대 프레임 수를 제한합니다. 이는 멀티 태스킹 시 배터리 사용량과 일반적인 시스템 부하를 줄이는 데 도움이 될 수 있습니다. V-Sync가 활성화된 경우 이 옵션은 디스플레이의 새로 고침 빈도보다 낮지 않는 한 무시됩니다.
sodium.options.view_bobbing.tooltip=활성화하면 플레이어의 시야가 움직일 때 흔들리게 됩니다. 플레이하는 동안 멀미를 경험하는 플레이어는 이 기능을 비활성화하면 도움이 될 수 있습니다.
sodium.options.attack_indicator.tooltip=공격 표시기가 화면에 표시되는 위치를 제어합니다.
sodium.options.autosave_indicator.tooltip=활성화하면 게임이 월드를 저장할 때 표시기가 표시됩니다.
sodium.options.graphics_quality.tooltip=일부 레거시 옵션을 제어하는 기본 그래픽 품질로, 모드 호환성에 유용합니다. 나뉘어진 그래픽 설정이 "기본"으로 설정되어 있으면 이 설정이 적용됩니다.
sodium.options.clouds_quality.tooltip=구름의 품질을 설정합니다. 실제 성능에는 큰 영향을 미치지 않습니다.
sodium.options.weather_quality.tooltip=눈과 비 등 날씨 효과가 렌더링되는 거리를 조절합니다.
sodium.options.leaves_quality.name=나뭇잎
sodium.options.leaves_quality.tooltip=나뭇잎을 투명하게 (화려하게) 또는 불투명하게 (빠르게) 렌더링 할지 설정합니다.
sodium.options.grass_quality.name=잔디 블록 품질
sodium.options.grass_quality.tooltip=잔디 블록의 품질을 설정합니다.
sodium.options.sodium_smooth_lighting.name=Sodium 부드러운 조명
sodium.options.sodium_smooth_lighting.tooltip=활성화하면, Sodium의 조명 파이프라인이 부드러운 조명에 사용됩니다. 부드러운 조명이 켜져있을때만 적용됩니다.
sodium.options.particle_quality.name=입자
sodium.options.particle_quality.tooltip=한번에 화면에 표시 가능한 최대 입자의 개수를 조절합니다.
sodium.options.smooth_lighting.tooltip=빛을 부드럽게 다듬고 블록의 음영을 렌더링 할지 설정합니다. 활성화 하면 청크를 로드하고 업데이트 하는 데 약간 더 오래 걸릴 수 있지만, FPS에는 영항을 주지 않습니다.
sodium.options.biome_blend.value=%s 블록
sodium.options.biome_blend.tooltip=생물 군계의 색을 다듬을 크기를 조절합니다. 값이 클수록 청크를 로드하고 업데이트하는데 더 오래 걸릴 수 있지만, 더 나은 품질을 경험할 수 있습니다.
sodium.options.entity_distance.tooltip=얼마나 멀리 있는 엔티티까지 렌더링할지 설정합니다. 높게 설정하면 프레임을 대가로 렌더 거리를 증가시킵니다.
sodium.options.entity_shadows.tooltip=설정하면, 몹이나 다른 엔티티에게 기본적인 그림자를 그립니다.
sodium.options.vignette.name=비네트
sodium.options.vignette.tooltip=활성화하면 화면에 비네트 효과가 적용됩니다. 이 효과는 그래픽 카드 성능이 현저히 낮은 경우가 아니라면 게임 성능에 거의 영향을 주지 않습니다.
sodium.options.mipmap_levels.tooltip=블록 모델 텍스처에 적용할 밉맵 단계를 조절합니다. 높은 값일수록 멀리 떨어진 블록의 렌더링 품질이 향상되지만, 애니메이션 텍스처가 많을 경우 성능이 저하될 수 있습니다.
sodium.options.use_chunk_multidraw.name=Chunk Multi-Draw
sodium.options.use_chunk_multidraw.tooltip=Multi-draw allows multiple chunks to be rendered with fewer draw calls, greatly reducing CPU overhead when rendering the world while also potentially allowing for more efficient GPU utilization. This optimization may cause issues with some graphics drivers, so you should try disabling it if you are experiencing glitches.
sodium.options.use_vertex_objects.name=Vertex Array Objects
sodium.options.use_vertex_objects.tooltip=Helps to improve performance by moving information about how vertex data should be rendered into the driver, allowing it to better optimize for repeated rendering of the same objects. There is generally no reason to disable this unless you're using incompatible mods.
sodium.options.use_block_face_culling.name=Block Face Culling
sodium.options.use_block_face_culling.tooltip=If enabled, only the sides of blocks which are facing the camera will be submitted for rendering. This can eliminate a large number of block faces very early in the rendering process, saving memory bandwidth and time on the GPU. Some resource packs may have issues with this option, so try disabling it if you're seeing holes in blocks.
sodium.options.use_compact_vertex_format.name=Compact Vertex Format
sodium.options.use_compact_vertex_format.tooltip=If enabled, a more compact vertex format will be used for rendering chunks. This can reduce graphics memory usage and bandwidth requirements significantly, especially for integrated graphics cards, but can cause z-fighting with some resource packs due to how it reduces the precision of position and texture coordinate attributes.
sodium.options.use_fog_occlusion.name=Fog Occlusion
sodium.options.use_fog_occlusion.tooltip=If enabled, chunks which are determined to be fully hidden by fog effects will not be rendered, helping to improve performance. The improvement can be more dramatic when fog effects are heavier (such as while underwater), but it may cause undesirable visual artifacts between the sky and fog in some scenarios.
sodium.options.use_entity_culling.name=Entity Culling
sodium.options.use_entity_culling.tooltip=If enabled, entities determined not to be in any visible chunks will be skipped during rendering. This can help improve performance by avoiding the rendering of entities located underground or behind walls.
sodium.options.use_particle_culling.name=Particle Culling
sodium.options.use_particle_culling.tooltip=If enabled, only particles which are determined to be visible will be rendered. This can provide a significant improvement to frame rates when many particles are nearby.
sodium.options.animate_only_visible_textures.name=Animate Only Visible Textures
sodium.options.animate_only_visible_textures.tooltip=If enabled, only animated textures determined to be visible will be updated. This can provide a significant boost to frame rates on some hardware, especially with heavier resource packs. If you experience issues with some textures not being animated, try disabling this option.
sodium.options.translucency_sorting.name=Translucency Sorting
sodium.options.translucency_sorting.tooltip=If enabled, translucent blocks will be sorted correctly from back to front to provide better rendering, especially when multiple translucent blocks are in view and layered.  This is a bit of an expensive operation.
sodium.options.cpu_render_ahead_limit.name=CPU Render-Ahead Limit
sodium.options.cpu_render_ahead_limit.tooltip=Specifies the maximum number of frames the CPU can be waiting on the GPU to finish rendering. Very low or high values may create frame rate instability.
sodium.options.cpu_render_ahead_limit.value=%s FPS
sodium.options.allow_direct_memory_access.name=Allow Direct Memory Access
sodium.options.allow_direct_memory_access.tooltip=If enabled, some critical code paths will be allowed to use direct memory access for performance. This often greatly reduces CPU overhead for chunk and entity rendering, but can make it harder to diagnose some bugs and crashes. You should only disable this if you've been asked to or otherwise know what you're doing.
sodium.options.ignore_driver_blacklist.name=Ignore Driver Blacklist
sodium.options.ignore_driver_blacklist.tooltip=If enabled, known incompatibilities with your hardware/driver configuration will be ignored, allowing you to enable options that may cause issues with your game. You should generally not touch this option unless you know exactly what you are doing. After changing this option, you must save, close, and then re-open the settings screen.
sodium.options.enable_memory_tracing.name=Enable Memory Tracing
sodium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
sodium.options.performance_impact_string=Performance Impact: %s
sodium.options.use_persistent_mapping.name=Persistent Mapping
sodium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
sodium.options.chunk_memory_allocator.name=Chunk Memory Allocator
sodium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
sodium.options.chunk_memory_allocator.async=수직동기화
sodium.options.chunk_memory_allocator.swap=Swap
sodium.options.chunk_update_threads.name=Chunk Update Threads
sodium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
sodium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
sodium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
sodium.options.use_no_error_context.name=No Error Context
sodium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
sodium.options.use_gl_state_cache.name=GL State Cache
sodium.options.use_gl_state_cache.tooltip=If enabled, the OpenGL state cache will be used to reduce the number of redundant state changes. This can improve performance, but it may also cause issues with some mods.  Does not persist across game restarts.
sodium.options.threads.value=%s 스레드
sodium.options.default=기본값
sodium.options.buttons.undo=되돌리기
sodium.options.buttons.apply=적용
sodium.options.buttons.donate=Buy coffee for JellySquid!
options.dynamic_fov=Dynamic FOV
options.dynamic_fov.tooltip=If enabled, the game's field of view will change based on the player's speed.
options.framerate=%s FPS
iris.shaders.toggled=Toggled shaders to %s!
iris.shaders.disabled=Shaders disabled!
options.iris.apply=적용
options.iris.refresh=새로고침
options.iris.openShaderPackFolder=셰이더 폴더 열기
options.iris.shaderPackSettings=셰이더 설정...
options.iris.shaderPackList=셰이더 리스트...
options.iris.refreshShaderPacks=셰이더 새로고침
options.iris.shaderPackSelection=셰이더...
options.iris.shaderPackSelection.title=셰이더
options.iris.shaderPackSelection.addedPack="%s" 셰이더를 추가했습니다.
options.iris.shaderPackSelection.addedPacks=%s 개의 셰이더를 추가했습니다.
options.iris.shaderPackSelection.failedAdd=파일이 유효한 셰이더가 아닙니다
options.iris.shaderPackSelection.failedAddSingle="%s" 는 유효한 셰이더가 아닙니다
options.iris.shaderPackSelection.copyError="%s" 셰이더를 추가할 수 없습니다.
options.iris.shaderPackSelection.copyErrorAlreadyExists="%s" 는 이미 당신의 셰이더 폴더에 있습니다!
options.iris.shaderPackOptions.tooManyFiles=여러개의 셰이더 설정 파일을 동시에 적용할 수 없습니다!
options.iris.shaderPackOptions.failedImport="%s" 셰이더 설정 파일을 적용하는데 실패했습니다.
options.iris.shaderPackOptions.importedSettings="%s" 파일에서 셰이더 설정을 적용했습니다.
options.iris.shaders.disabled=셰이더: 비활성화됨
options.iris.shaders.enabled=셰이더: 활성화됨
options.iris.shaders.nonePresent=셰이더: 셰이더 팩 없음
options.iris.back=뒤로가기
options.iris.reset=초기화
options.iris.reset.tooltip=모든 설정을 초기화합니까?
options.iris.reset.tooltip.holdShift=SHIFT를 누른 상태에서 클릭하여 리셋하세요
options.iris.importSettings.tooltip=설정 가져오기
options.iris.exportSettings.tooltip=설정 내보내기
options.iris.mustDisableFullscreen=먼저 전체화면을 비활성화 해주세요!
options.iris.setToDefault=설정을 기본값으로 재설정합니까?
options.iris.profile=프로파일
options.iris.profile.custom=사용자 지정
options.iris.shadowDistance=최대 그림자 거리
options.iris.shadowDistance.sodium_tooltip=최대 그림자 거리
options.iris.shadowDistance.enabled=Allows you to change the maximum distance for shadows. Terrain and entities beyond this distance will not cast shadows. Lowering the shadow distance can significantly increase performance.
options.iris.shadowDistance.disabled=Your current shader pack has already set a render distance for shadows; you cannot change it.
options.iris.gui.hide=GUI 숨기기
options.iris.gui.show=GUI 보이기
options.dynamic_lights=동적 조명
options.dynamic_lights.tooltip=동적 조명을 켭니다. 설정: 꺼짐, 빠르게 - 500ms, 기본 - 250ms, 화려하게 - 50ms, 실시간 - 딜레이 없음
options.dynamic_lights_shader_force=동적 조명 - 셰이더에 적용
options.dynamic_lights_shader_force.tooltip=활성화 - 동적 조명이 셰이더가 켜져 있어도 활성화됩니다. 비활성화 - 동적 조명이 셰이더가 켜져 있으면 비활성화 됩니다.
options.angelica.droppedItemLimit=떨어진 아이템 렌더링 제한
options.angelica.droppedItemLimit.tooltip=떨어진 아이템이 렌더링되는 최대 개수를 제한합니다. 낮은 값으로 설정하면 성능을 향상시킬 수 있습니다.
options.angelica.mobSpawnerRenderDistance=스포너 렌더 거리
options.angelica.mobSpawnerRenderDistance.tooltip=스포너 안에 있는 돌아가는 몹의 렌더 거리를 설정합니다.
options.angelica.itemdisplaylistcount=Item Renderer Display List Cache Size
options.angelica.itemdisplaylistcount.tooltip=The maximum number of display lists to cache in the optimized item renderer. Higher values will increase performance but increase VRAM usage.
options.angelica.sleepbeforeswap=Alternate FPS Limiter
options.angelica.sleepbeforeswap.tooltip=Switches to an alternate FPS limiter that gives more stable frametimes, in exchange for slightly more latency. Will never introduce more than one frame of latency, and has a lower impact at higher framerates.
pack.iris.select.title=선택
pack.iris.configure.title=설정
label.iris.true=켜짐
label.iris.false=꺼짐